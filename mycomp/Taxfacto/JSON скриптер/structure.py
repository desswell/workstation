from copy import deepcopy

main_structure = {
    "Номер дела|номер дела": "",
    "Дата решения|дата решения": "",
    "Суд|суд": "",
    "Город|город": "",
    "Заявитель|заявитель|истец": {
        "Наименование": "",
        "Тип": "Налогоплательщик | Налоговый орган"
    },
    "Ответчики|ответчики|ответчик": [
        {
            "Наименование": "",
            "Тип": "Налогоплательщик | Налоговый орган"
        }
    ],
    "Результаты|результаты|результат": [
        {
            "Описание": "",
            "В пользу кого": "Налоговый орган | Налогоплательщик"
        }
    ],
    "Обстоятельства|обстоятельства|обстоятельство": [
        ""
    ],
    "Действия налогоплательщика|действия налогоплательщика": [
        ""
    ],
    "Действия налогового органа|действия налогового органа": [
        ""
    ],
    "Аргументы налогоплательщика|аргументы налогоплательщика|аргумент налогоплательщика": [
        ""
    ],
    "Аргументы налогового органа|аргументы налогового органа|аргумент налогового органа": [
        ""
    ],
    "Причина|причина|причины|Причина Действия налогоплательщика|Причины обращения в суд|причина обращения с кас-ой жалобой": [
        ""
    ],
    "Следствие|следствие|Следствие действия налогового органа": [
        ""
    ],
    "Основание|основание": [
        ""
    ],
    "Прецеденты|прецеденты|прецедент": [
        {
            "Наименование": "",
            "Тема прецедента": ""
        }
    ],
    "Эпизод (статья)|эпизод (статья)": [
        {
            "Статья": "",
            "Пункт": ""
        }
    ],
    "Все статьи дела|все статьи дела": [
        {
            "Статья": "",
            "Пункт": ""
        }
    ],
    "Смягчающие обстоятельства|смягчающие обстоятельства|смягчающее обстоятельство": [
        ""
    ],
    "Доказательства|доказательства|доказательство": [
        ""
    ],
    "Выводы суда|выводы суда|вывод суда|вывод|выводы": [
        ""
    ],
    "Иные участники спора|иные участники спора|третье лицо": [
        ""
    ]
}


class Structure:

    def __init__(self, structure=None):
        if structure is None:
            self.structure = deepcopy(main_structure)
        else:
            self.structure = deepcopy(structure)

        self.comments_to_keys = {}
        for key in self.structure.keys():
            values = key.split('|')
            for val in values:
                self.comments_to_keys[val] = values[0]

    def copy(self):
        result = {}
        for key in self.structure.keys():
            pos = key.find('|')
            if pos == -1:
                result[key] = self.structure[key]
            else:
                result[key[:pos]] = self.structure[key]

        return result

    def comment_to_key(self, comment):
        return self.comments_to_keys[comment]

    @staticmethod
    def add_articles(structure):
        for article in structure['Эпизод (статья)']:
            if not article in structure['Все статьи дела']:
                structure['Все статьи дела'].append(article)

    @staticmethod
    def clear(structure):
        for key in structure.keys():
            if isinstance(structure[key], list) and len(structure[key]) > 0:
                structure[key].pop(-1)
